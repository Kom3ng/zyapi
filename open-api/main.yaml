openapi: 3.0.2
info:
  title: 中育API
  version: "1.0"
  description: "\u4E2D\u80B2\u7684api"
  contact:
    name: Astrack
    url: https://astrack.me
    email: 3262392248@qq.com
  license:
    name: MIT
    url: https://mit-license.org/
servers:
  - url: http://sxz.api.zykj.org/api
    description: Official Server
  - url: https://proxy.astrack.me/zykj/api
    description: Proxy Server
  - url: https://zyp.astrack.me/zpi
    description: Proxy on Fastly
paths:
  /services/app/Weather/GetQWeatherAsync:
    get:
      summary: "\u83B7\u53D6\u5929\u6C14\u4FE1\u606F"
      tags: ["misc"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      code:
                        type: string
                      updateTime:
                        type: string
                      fxLink:
                        type: string
                        format: uri
                      daily:
                        type: object
                        properties:
                          fxDate:
                            type: string
                          tempMax:
                            type: string
                          tempMin:
                            type: string
                          iconDay:
                            type: string
                          textDay:
                            type: string
                          iconNight:
                            type: string
                          textNight:
                            type: string
                          windDirDay:
                            type: string
                          windScaleDay:
                            type: string
                          windDirNight:
                            type: string
                          windScaleNight:
                            type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __adp:
                    type: boolean
      operationId: getQWeather
      description: "\u83B7\u53D6\u4E09\u5929\u5929\u6C14"
      parameters:
        - schema:
            type: string
          in: query
          name: location
          description: "\u4F4D\u7F6E"
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      security:
        - token: []
    parameters: []
  /services/app/Setting/GetSystemSettingsForStudentAsync:
    get:
      summary: "\u83B7\u53D6\u5B66\u751F\u8BBE\u7F6E"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      studentSelectActivity:
                        type: string
                      studentSatisfaction:
                        type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getSystemSettingsForStudent
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /TokenAuth/Login:
    post:
      tags:
        - "manage"
      summary: "\u767B\u9646"
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientType:
                  type: integer
                password:
                  type: string
                  format: password
                userName:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      clientCode:
                        type: string
                      accessToken:
                        type: string
                      rongCloudToken:
                        type: string
                      expireInSeconds:
                        type: integer
                      userId:
                        type: integer
                      roleType:
                        $ref: "#/components/schemas/RoleType"
                      mobile:
                        type: string
                      needChangePwd:
                        type: boolean
                      refreshToken:
                        type: string
                      refreshExpireInSeconds:
                        type: integer
                      needSmsVerification:
                        type: boolean
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Setting/GetAllSettings:
    get:
      summary: "\u83B7\u53D6\u6240\u6709\u8BBE\u7F6E"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      schoolName:
                        type: string
                      schoolShortName:
                        type: string
                      systemName:
                        type: string
                      stuNumLength:
                        type: string
                      backgroundImage:
                        type: string
                      icon:
                        type: string
                      stageIds:
                        type: array
                        items:
                          type: string
                      xkwOrder:
                        type: string
                      dnOrder:
                        type: string
                      newDeviceSmsAuthentication:
                        type: string
                      studentSelectActivity:
                        type: string
                      studentSatisfaction:
                        type: string
                      qq:
                        type: string
                      emailAddress:
                        type: string
                      wechat:
                        type: string
                      telephone:
                        type: string
                      mobile:
                        type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getAllSettings
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/Message/GetMyMessageListAsync:
    post:
      tags:
        - "manage"
      summary: "\u83B7\u53D6\u6D88\u606F\u5217\u8868"
      operationId: getMyMessageList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                        minimum: 0
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                            type:
                              type: integer
                            isRead:
                              type: boolean
                            parameter:
                              type: object
                              properties:
                                id:
                                  type: integer
                            senderInfo:
                              type: object
                              properties:
                                fullName:
                                  type: string
                                gender:
                                  type: integer
                                picture:
                                  type: string
                                  format: uri
                                roleType:
                                  $ref: "#/components/schemas/RoleType"
                            isDeleted:
                              type: boolean
                            deleterUserId:
                              type: string
                            deletionTime:
                              type: string
                            lastModificationTime:
                              type: string
                            lastModifierUserId:
                              type: string
                            creationTime:
                              type: string
                            creatorUserId:
                              type: integer
                            id:
                              type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResultCount:
                  type: integer
                  minimum: 0
                skipCount:
                  type: integer
                  minimum: 0
                type:
                  type: integer
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/Message/SetMessageReadAsync:
    post:
      tags:
        - "manage"
      summary: "\u8BBE\u7F6E\u6D88\u606F\u5DF2\u8BFB"
      operationId: setMessageRead
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - schema:
            type: integer
          in: query
          name: messageId
  /services/app/Notice/GetNoticeAsync:
    get:
      summary: "\u83B7\u53D6\u901A\u77E5"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      title:
                        type: string
                      content:
                        type: string
                      type:
                        type: integer
                      targetCount:
                        type: integer
                      readCount:
                        type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getNotice
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - schema:
            type: integer
          in: query
          name: id
  /services/app/Message/GetMyUnreadMessageCountAsync:
    get:
      summary: "\u83B7\u53D6\u672A\u8BFB\u6D88\u606F\u5217\u8868"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: integer
                        count:
                          type: integer
                          minimum: 0
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getMyUnreadMessageCount
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/WebWhiteList/GetAllCommonWebSiteAsync:
    get:
      summary: "\u83B7\u53D6\u5171\u540C\u7684\u7F51\u5740"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getAllCommonWebSite
      description: "\u4E0D\u77E5\u9053\u662F\u5E72\u4EC0\u4E48\u7684(^^;"
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/WebWhiteList/GetAllWhiteUrlAsync:
    get:
      summary: "\u83B7\u53D6\u767D\u540D\u5355"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: "\u52A0\u5BC6\u8FC7"
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getAllWhiteUrlAsync
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/StudentUser/CoursesSubscribed:
    get:
      summary: "\u83B7\u53D6\u8BA2\u9605\u8BFE\u7A0B"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        teacherUsers:
                          type: object
                          properties:
                            id:
                              type: integer
                            fullName:
                              type: string
                        topics:
                          type: object
                          properties:
                            name:
                              type: string
                            content:
                              type: string
                            sort:
                              type: integer
                            isActive:
                              type: boolean
                            system:
                              type: boolean
                            platformId:
                              type: integer
                            lastModificationTime:
                              type: string
                            lastModifierUserId:
                              type: integer
                            creationTime:
                              type: string
                            creatorUserId:
                              type: integer
                            id:
                              type: integer
                        classRoomId:
                          type: integer
                        title:
                          type: string
                        subscribers:
                          type: integer
                        createUserId:
                          type: integer
                        createTime:
                          type: string
                        state:
                          type: integer
                        editUserId:
                          type: integer
                        editTime:
                          type: string
      operationId: coursesSubscribed
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/ObjectStorage/GeneratorTokenAsync:
    get:
      summary: "\u751F\u6210OSS\u4EE4\u724C"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      strategy:
                        type: string
                      appId:
                        type: string
                      bucket:
                        type: string
                      endpoint:
                        type: string
                      region:
                        type: string
                      accessKeyId:
                        type: string
                      accessKeySecret:
                        type: string
                      securityToken:
                        type: string
                      expiration:
                        type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: generatorToken
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /dn/GetDnUrl:
    get:
      summary: "\u83B7\u53D6\u61C2\u4F60100URL"
      tags: ["misc"]
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getDnUrl
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - schema:
            type: integer
          in: query
          name: clientType
  /services/app/StoreAppControl/CanIOpenCameraAsync:
    get:
      summary: "\u83B7\u53D6\u6253\u5F00\u6444\u50CF\u5934\u6743\u9650"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: canIOpenCamera
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - schema:
            type: string
          in: query
          name: packageName
      security:
        - token: []
  /services/app/StoreAppControl/RecordPicturesAsync:
    post:
      tags:
        - "manage"
      summary: "\u8BB0\u5F55\u56FE\u7247"
      operationId: recordPictures
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  success:
                    type: boolean
                  targetUrl:
                    type: string
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                appName:
                  type: string
                packageName:
                  type: string
                pictures:
                  type: array
                  items:
                    type: string
  /services/app/AppStore/CheckUpdateAsync:
    get:
      summary: "\u68C0\u67E5\u66F4\u65B0"
      tags: ["manage"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        type: integer
                      appVersionId:
                        type: integer
                      packageName:
                        type: string
                      score:
                        type: number
                        format: double
                      creationTime:
                        type: string
                      creatorUserId:
                        type: integer
                      summary:
                        type: string
                      description:
                        type: string
                      downloads:
                        type: integer
                      fileUrl:
                        type: string
                        format: uri
                      forceUpdate:
                        type: boolean
                      icon:
                        type: string
                        format: uri
                      name:
                        type: string
                      size:
                        type: integer
                      versionCode:
                        type: integer
                      versionName:
                        type: string
                      appType:
                        type: integer
                      disabled:
                        type: boolean
                      lastModificationTime:
                        type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: checkUpdate
      parameters:
        - schema:
            type: string
          in: query
          name: packageName
        - schema:
            type: integer
          in: query
          name: appType
  /services/app/MistakeBook/GetMyTags:
    get:
      summary: "\u83B7\u53D6\u6807\u7B7E"
      tags: ["mistake"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        bindItemCount:
                          type: integer
                        id:
                          type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getMyTags
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/MistakeBook/MultiRemoveMistakeItemsAsync:
    post:
      tags:
        - "mistake"
      summary: "\u79FB\u9664\u591A\u4E2A\u9519\u9898"
      operationId: multiRemoveMistakeItems
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                itemIds:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/MistakeBook/GetMistakeQstItemDetailInfoAsync:
    get:
      summary: "\u83B7\u53D6\u9519\u9898\u95EE\u9898\u4FE1\u606F"
      tags: ["mistake"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      questionId:
                        type: integer
                      examId:
                        type: integer
                      number:
                        type: integer
                      name:
                        type: string
                      qstFlows:
                        type: array
                        items:
                          $ref: "#/components/schemas/QstFlow"
                      qstPath:
                        type: string
                      attachments:
                        type: array
                        items:
                          type: string
                      answerInfos:
                        type: array
                        items:
                          type: object
                          properties:
                            uuid:
                              type: string
                              format: uuid
                            number:
                              type: integer
                            result:
                              type: integer
                            examAnswers:
                              type: array
                              items:
                                type: string
                            examComments:
                              type: array
                              items:
                                type: string
                            examMicroLessonComment:
                              type: string
                            revisingAnswers:
                              type: array
                              items:
                                type: string
                            reviseMicroLessonComment:
                              type: string
                            revisingComments:
                              type: array
                              items:
                                type: string
                      revisingResult:
                        type: integer
                      microClassToQuestionList:
                        type: array
                        items:
                          type: string
                      microClassToStudentList:
                        type: array
                        items:
                          type: string
                      typicalErrorAnswers:
                        type: array
                        items:
                          type: object
                      typicalRightAnswers:
                        type: array
                        items:
                          type: object
                      itemType:
                        type: integer
                      isShowAnswer:
                        type: boolean
                      isShowMicroLesson:
                        type: boolean
                      itemId:
                        type: integer
                      bookId:
                        type: integer
                      extraStems:
                        type: array
                        items:
                          type: string
                      diff:
                        type: integer
                      attainedLevel:
                        type: integer
                      errorReason:
                        type: integer
                      mistakeTags:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            bindItemCount:
                              type: integer
                            id:
                              type: integer
                      note:
                        type: string
                      pictureNote:
                        type: array
                        items:
                          type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getMistakeQstItemDetailInfo
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - schema:
            type: integer
          in: query
          name: itemId
      security:
        - token: []
  /services/app/MistakeBook/SearchMistakeQstItemsAsync:
    post:
      tags:
        - "mistake"
      summary: "\u641C\u7D22\u9519\u9898\u95EE\u9898"
      operationId: searchMistakeQstItems
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            source:
                              type: string
                            creationTime:
                              type: string
                            stemShoot:
                              type: string
                            hasStem:
                              type: boolean
                            diff:
                              type: integer
                            attainedLevel:
                              type: integer
                            errorReason:
                              type: integer
                            tagNames:
                              type: array
                              items:
                                type: string
                            isRelatedQstGroup:
                              type: boolean
                            number:
                              type: integer
                            name:
                              type: string
                            id:
                              type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attainedLevel:
                  type: array
                  items:
                    type: integer
                bookId:
                  type: integer
                diff:
                  type: array
                  items:
                    type: integer
                errorReason:
                  type: array
                  items:
                    type: integer
                haveNoTag:
                  type: boolean
                maxResultCount:
                  type: integer
                skipCount:
                  type: integer
                tagIdList:
                  type: array
                  items:
                    type: string
  /services/app/MistakeBook/GetMyMistakeBooksAsync:
    get:
      summary: "\u83B7\u53D6\u9519\u9898\u672C"
      tags: ["mistake"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        topicId:
                          type: integer
                        topic:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            content:
                              type: string
                            sort:
                              type: integer
                            isActive:
                              type: boolean
                        studentUserId:
                          type: integer
                        newQstCount:
                          type: integer
                        totalQstCount:
                          type: integer
                        id:
                          type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getMyMistakeBooks
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
  /services/app/Quora/GetCatalogs:
    get:
      summary: "\u83B7\u53D6\u76EE\u5F55"
      tags: ["quora"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        hasNewMsgs:
                          type: boolean
                        newMsgCount:
                          type: integer
                        hasNewParimaryMsgs:
                          type: boolean
                        newParimarMsgCount:
                          type: integer
                        sort:
                          type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getCatalogs
      security:
        - token: []
  /services/app/Quora/GetQuoraStudentTopicsAsync:
    get:
      tags:
        - "quora"
      summary: "\u83B7\u53D6\u968F\u8EAB\u7B54"
      operationId: getQuoraStudentTopics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        topicId:
                          type: integer
                        topicName:
                          type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"

  /services/app/Quora/GetSessions:
    post:
      summary: "\u83B7\u53D6\u968F\u8EAB\u7B54"
      tags: ["quora"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: getSessions
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                catalogId:
                  type: integer
                joinTime:
                  $ref: "#/components/schemas/TimeFrame"
                justWatch:
                  type: array
                  items:
                    type: integer
                keyword:
                  type: string
                orderBy:
                  type: integer
                skip:
                  type: integer
                take:
                  type: integer
                topicId:
                  type: integer
                updateTime:
                  $ref: "#/components/schemas/TimeFrame"
  /services/app/Quora/DeleteCatalog:
    get:
      summary: "\u5220\u9664\u76EE\u5F55"
      tags: ["quora"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: deleteCatalog
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - schema:
            type: integer
          in: query
          name: id
  /services/app/Quora/AddCatalog:
    post:
      tags:
        - "quora"
      summary: "\u65B0\u5EFA\u76EE\u5F55"
      operationId: addCatalog
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    description: "\u76EE\u5F55id"
                  targetUrl:
                    type: string
                  success:
                    type: integer
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
  /services/app/Quora/SearchQuora:
    post:
      summary: "\u641C\u7D22\u95EE\u9898"
      tags: ["quora"]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      operationId: searchQuora
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageUrl:
                  type: string
                  format: uri
  /services/app/Quora/CreateSession:
    post:
      tags:
        - "quora"
      summary: "\u521B\u5EFA\u968F\u8EAB\u7B54"
      operationId: createSession
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                    description: id
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                courseId:
                  type: string
                snapshot:
                  type: string
                summary:
                  type: string
  /TokenAuth/RefreshToken:
    post:
      operationId: refreshToken
      tags:
        - "manage"
      description: "刷新token"
      parameters:
        - name: "refreshToken"
          in: "header"
          description: "refreshToken"
          required: true
          schema:
            type: "string"
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      accessToken:
                        type: string
                      expireInSeconds:
                        type: integer
                      refreshExpireInSeconds:
                        type: integer
                      refreshToken:
                        type: string
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Task/GetStudentTaskListAsync:
    post:
      operationId: getStudentTaskList
      tags:
        - "task"
      description: "获取任务列表"
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResultCount:
                  type: integer
                skipCount:
                  type: integer
                taskListType:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/TaskList"
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Task/GetNoQstExamTaskAsync:
    get:
      operationId: getNoQstExam
      tags:
        - "task"
      description: ""
      parameters:
        - name: id
          in: query
          schema:
            type: integer
          required: true
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
                  result:
                    $ref: "#/components/schemas/NoQstExam"
  /services/app/Task/AskForHelpAsync:
    post:
      operationId: askForHelp
      tags:
        - "task"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                askForHelp:
                  type: boolean
                examTaskId:
                  type: integer
                questionId:
                  type: integer

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
                  result:
                    type: object
  /services/app/Task/NoQstExamAnswerAsync:
    post:
      operationId: noQstExamAnswer
      tags:
        - "task"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - name: taskId
          in: query
          schema:
            type: integer
          required: true
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Answers"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
                  result:
                    type: object
  /services/app/Task/GetExamTaskAsync:
    get:
      operationId: getExamTask
      tags:
        - "task"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - name: id
          in: query
          schema:
            type: integer
          required: true
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/ExamTask"
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Task/GetQuestionViewAsync:
    get:
      operationId: getQuestionView
      tags:
        - "task"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
        - name: examId
          in: query
          schema:
            type: integer
          required: true
        - name: questionId
          in: query
          schema:
            type: integer
          required: true
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/QuestionView"
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Task/ExamAnswerAsync:
    post:
      operationId: examAnswer
      tags:
        - "task"
      description: ""
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
        - name: taskId
          in: query
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Answers"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
                  result:
                    type: object
  /services/app/Task/CompleteAsync:
    post:
      operationId: complete
      tags:
        - "task"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
        - name: id
          in: query
          schema:
            type: integer
          required: true
        - name: isRevising
          in: query
          schema:
            type: boolean
          required: true
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
                  result:
                    type: object
  /services/app/User/GetInfoAsync:
    get:
      tags:
        - "manage"
      operationId: getInfo
      description: ""
      parameters: []
      security:
        - token: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/UserInfo"
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
  /services/app/MistakeBook/AddInMistakeBookAsync:
    post:
      operationId: addInMistakeBook
      tags:
        - "mistake"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                examId:
                  type: integer
                extraStems:
                  type: array
                  items:
                    type: string
                isRelatedGroup:
                  type: boolean
                questionId:
                  type: integer
                stemShoot:
                  type: string
                tagIdList:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
                  result:
                    type: integer
  /services/app/MistakeBook/AddPictureNoteAsync:
    post:
      operationId: addPictureNote
      security:
        - token: []
      tags:
        - "mistake"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mistakeItemId:
                  type: integer
                pictureNote:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: true
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/MistakeBook/SetNoteAsync:
    post:
      operationId: setNote
      tags:
        - "mistake"
      security:
        - token: []
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mistakeItemId:
                  type: integer
                note:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: true
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/MistakeBook/MultiSetTagsAsync:
    post:
      operationId: multiSetTags
      tags:
        - "mistake"
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
      security:
        - token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                itemIds:
                  type: array
                  items:
                    type: integer
                tagIdList:
                  type: array
                  items:
                    type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: true
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/MistakeBook/GetCustomMistakeQstItemDetailInfoAsync:
    get:
      operationId: getCustomMistakeQstItemDetailInfo
      tags:
        - "mistake"
      description: ""
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
        - name: itemId
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/CustomMistakeInfo"
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/MistakeBook/AddCustomMistakeQstItemAsync:
    post:
      operationId: addCustomMistakeQstItem
      tags:
        - "mistake"
      security:
        - token: []
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppVersion"
        - $ref: "#/components/parameters/AppName"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomMistakeQstItem"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                  targetUrl:
                    type: string
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/GetSessionById:
    get:
      security:
        - token: []
      operationId: getSessionById
      tags:
        - "quora"
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - name: id
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: "#/components/schemas/Session"
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/GetMessages:
    post:
      operationId: getMessages
      security:
        - token: []
      description: ""
      tags:
        - quora
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SessionId:
                  type: string
                Skip:
                  type: integer
                Take:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/Message"
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/ResetReadState:
    get:
      operationId: resetReadState
      tags:
        - quora
      security:
        - token: []
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
        - name: sessionId
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: true
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/UpdateCatalog:
    post:
      tags:
        - quora
      security:
        - token: []
      operationId: updateCatalog
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: true
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/AlterQuoraCatalogSortAsync:
    post:
      operationId: alterQuoraCatalogSort
      tags:
        - quora
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  sort:
                    type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: true
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/GetCollectSessions:
    post:
      operationId: getCollectSessions
      tags:
        - quora
      security:
        - token: []
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                collectTime:
                  $ref: "#/components/schemas/TimeFrame"
                keyword:
                  type: string
                topicId:
                  type: integer
                skip:
                  type: integer
                take:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: "#/components/schemas/CollectSession"
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean
  /services/app/Quora/SetQuoraCollectAsync:
    post:
      operationId: setQuoraCollect
      tags:
        - quora
      security:
        - token: []
      description: ""
      parameters:
        - $ref: "#/components/parameters/AppName"
        - $ref: "#/components/parameters/AppVersion"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isCollect:
                  type: boolean
                sessionId:
                  type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    nullable: false
                  targetUrl:
                    type: string
                    nullable: true
                  success:
                    type: boolean
                  error:
                    $ref: "#/components/schemas/ApiError"
                  unAuthorizedRequest:
                    type: boolean
                  __abp:
                    type: boolean

components:
  schemas:
    ApiError:
      title: ApiError
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        details:
          type: string
        validationErrors:
          type: string
      description: "\u9519\u8BEF\u4FE1\u606F"
    ClientType:
      title: ClientType
      enum:
        - 1
        - 2
      default: 1
      example: 1
    RoleType:
      title: RoleType
      enum:
        - 1
        - 2
        - 9
    QstFlow:
      title: QstFlow
      type: object
      properties:
        type:
          type: integer
        subQuestions:
          type: array
          items:
            $ref: "#/components/schemas/QstFlow"
        score:
          type: number
          format: double
        missScore:
          type: number
          format: double
        number:
          type: integer
        uuid:
          type: string
          format: uuid
        qstType:
          type: integer
        options:
          type: array
          items:
            type: string
        getScore:
          type: number
          format: double
        originScore:
          type: number
          format: double
    TimeFrame:
      title: TimeFrame
      type: object
      properties:
        end:
          type: string
        start:
          type: string
    UserInfo:
      type: object
      properties:
        id:
          type: integer
        userName:
          type: string
        realName:
          type: string
        surname:
          type: string
        name:
          type: string
        mobile:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        photo:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleType"
    QuestionView:
      type: object
      properties:
        attachments:
          type: string
        qstAnswers:
          type: string
          nullable: true
        analysis:
          type: string
          nullable: true
        microClassToQuestionList:
          type: array
          items:
            type: object
        microClassToStudentList:
          type: array
          items:
            type: object
        examDraft:
          type: string
        revisingDraft:
          type: string
          nullable: true
        revisingResult:
          type: integer
        examAnswered:
          type: boolean
        revisingAnswerd:
          type: boolean
        lastRoundRevisingRecords:
          type: array
          items:
            type: object
        typicalRightAnswers:
          type: string
          nullable: true
        typicalErrorAnswers:
          type: string
          nullable: true
        isInMistakeBook:
          type: boolean
        askForHelp:
          type: boolean
        number:
          type: integer
        path:
          type: string
        itemType:
          type: integer
        qstFlows:
          type: array
          items:
            $ref: "#/components/schemas/QstFlow"
        qstFlowsCount:
          type: integer
        totalScore:
          type: number
        totalAnswerScore:
          type: number
        score:
          type: number
        originScore:
          type: number
          nullable: true
        answerWithQuestion:
          type: boolean
        answerList:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
              number:
                type: integer
              examAnswers:
                type: array
                items:
                  type: string
              examComments:
                type: array
                items:
                  type: string
              examMicroLessonComment:
                type: string
                nullable: true
              revisingAnswers:
                type: array
                items:
                  type: string
              revisingComments:
                type: array
                items:
                  type: string
              reviseMicroLessonComment:
                type: string
                nullable: true
              score:
                type: number
              originScore:
                type: number
                nullable: true
              result:
                type: integer
              originResult:
                type: integer
                nullable: true
              displayAnswer:
                type: integer
              whenShowAnswer:
                type: integer
              whenShowMicroLesson:
                type: integer
              examState:
                type: integer
              taskState:
                type: integer
        microClassList:
          type: string
          nullable: true
        id:
          type: integer
    ExamTask:
      type: object
      properties:
        address:
          type: string
          nullable: true
        answerPad:
          type: boolean
        answerSheet:
          type: boolean
        answerSheetId:
          type: integer
        answeringUrge:
          type: integer
        correctOnline:
          type: boolean
        correctOnlineState:
          type: integer
        correctWithSelf:
          type: boolean
        creationTime:
          type: string
          format: date-time
        displayAnswer:
          type: integer
        enableScore:
          type: boolean
        endTime:
          type: string
          format: date-time
          nullable: true
        examId:
          type: integer
        examName:
          type: string
        examState:
          type: integer
        examTips:
          type: string
          nullable: true
        gradeId:
          type: integer
        gradeName:
          type: string
        groups:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
              myScore:
                type: integer
              name:
                type: string
              number:
                type: integer
              qstCount:
                type: integer
              questions:
                type: array
                items:
                  type: object
                  properties:
                    askForHelp:
                      type: boolean
                    completed:
                      type: boolean
                    hasMicroClass:
                      type: boolean
                    id:
                      type: integer
                    itemType:
                      type: integer
                    myScore:
                      type: integer
                    name:
                      type: string
                      nullable: true
                    number:
                      type: integer
                    originScore:
                      type: integer
                      nullable: true
                    relatedGroupId:
                      type: integer
                      nullable: true
                    revisingResult:
                      type: integer
                    score:
                      type: integer
                    state:
                      type: integer
              score:
                type: integer
              showGroupNumber:
                type: boolean
    Answers:
      type: object
      properties:
        answers:
          type: array
          items:
            type: object
            properties:
              answers:
                type: array
                items:
                  type: string
              uuid:
                type: string
                format: uuid
        draft:
          type: string
        questionId:
          type: integer
    NoQstExam:
      type: object
      properties:
        address:
          type: string
          nullable: true
        answerPad:
          type: boolean
        answerSheet:
          type: boolean
        answerSheetId:
          type: integer
        answeringUrge:
          type: integer
        correctOnline:
          type: boolean
        correctOnlineState:
          type: integer
        correctWithSelf:
          type: boolean
        creationTime:
          type: string
          format: date-time
        displayAnswer:
          type: integer
        enableScore:
          type: boolean
        endTime:
          type: string
          format: date-time
          nullable: true
        examId:
          type: integer
        examName:
          type: string
        examState:
          type: integer
        examTips:
          type: string
          nullable: true
        gradeId:
          type: integer
        gradeName:
          type: string
        groups:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                nullable: true
              myScore:
                type: integer
              name:
                type: string
              number:
                type: integer
              qstCount:
                type: integer
              questions:
                type: array
                items:
                  type: object
                  properties:
                    answerList:
                      type: array
                      items:
                        type: object
                        properties:
                          answers:
                            type: array
                            items:
                              type: string
                          pid:
                            type: integer
                            nullable: true
                          uuid:
                            type: string
                    answerWithQuestion:
                      type: boolean
                    askForHelp:
                      type: boolean
                    completed:
                      type: boolean
                    id:
                      type: integer
                    myScore:
                      type: integer
                    name:
                      type: string
                    number:
                      type: integer
                    qstFlows:
                      type: array
                      items:
                        $ref: "#/components/schemas/QstFlow"
                    score:
                      type: integer
        id:
          type: integer
        isExempted:
          type: boolean
        isRead:
          type: boolean
          nullable: true
        isRepresentative:
          type: boolean
        myScore:
          type: integer
        noQstStem:
          type: boolean
        qstCount:
          type: integer
        revisingUrge:
          type: integer
        score:
          type: integer
        serialNum:
          type: string
          nullable: true
        size:
          type: integer
        specificTrainingType:
          type: integer
        startTime:
          type: string
          format: date-time
        state:
          type: integer
        studentUserId:
          type: integer
        teacherUserId:
          type: integer
        testDescription:
          type: string
        testPagerId:
          type: integer
        testPagerName:
          type: string
        testTips:
          type: string
        topicId:
          type: integer
        topicName:
          type: string
        whenShowAnswer:
          type: integer
        whenShowMicroLesson:
          type: integer
    TaskList:
      type: object
      properties:
        totalCount:
          type: integer
        items:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                format: uri
              answerPad:
                type: boolean
              answerSheet:
                type: boolean
              answeringUrge:
                type: integer
              correctOnline:
                type: boolean
              correctOnlineState:
                type: integer
              correctWithSelf:
                type: boolean
              creationTime:
                type: string
                format: date-time
              endTime:
                type: string
                format: date-time
              examId:
                type: integer
              examName:
                type: string
              examState:
                type: integer
              examTaskId:
                type: integer
              isCollect:
                type: boolean
              isExempted:
                type: boolean
              isNoStem:
                type: boolean
              isRead:
                type: boolean
              revisingUrge:
                type: integer
              serialNum:
                type: string
              size:
                type: integer
              specificTrainingType:
                type: integer
              startTime:
                type: string
                format: date-time
              taskState:
                type: integer
              testPagerId:
                type: integer
              topicId:
                type: integer
              topicName:
                type: string
    Session:
      type: object
      properties:
        cleared:
          type: integer
        closed:
          type: boolean
        courseId:
          type: integer
        createTime:
          type: string
        askUserId:
          type: integer
        members:
          type: integer
        messages:
          type: integer
        snapshot:
          type: string
        summary:
          type: string
        updateTime:
          type: string
        updateUserId:
          type: integer
        sessionRole:
          type: integer
        unRead:
          type: integer
        primaryUnRead:
          type: integer
        sentMessages:
          type: integer
        openCount:
          type: integer
        state:
          type: integer
        userId:
          type: integer
        joinType:
          type: integer
        joinTime:
          type: string
        askUserName:
          type: string
        updateUserName:
          type: string
        askUserPhoto:
          type: string
          format: uri
        updateUserPhoto:
          type: string
          format: uri
        disabled:
          type: boolean
        class:
          type: string
        topicName:
          type: string
        isCollect:
          type: boolean
        searched:
          type: integer
        id:
          type: integer
    CustomMistakeInfo:
      type: object
      properties:
        answerInfos:
          type: array
          items:
            $ref: "#/components/schemas/AnswerInfo"
        attachments:
          type: string
          nullable: true
        attainedLevel:
          type: string
          nullable: true
        bookId:
          type: integer
        diff:
          type: string
          nullable: true
        errorReason:
          type: string
          nullable: true
        examId:
          type: integer
          nullable: true
        extraStems:
          type: array
          items:
            type: string
        isShowAnswer:
          type: boolean
        isShowMicroLesson:
          type: boolean
        itemId:
          type: integer
        itemType:
          type: integer
        microClassToQuestionList:
          type: array
          items:
            type: string
        microClassToStudentList:
          type: array
          items:
            type: string
        mistakeTags:
          type: array
          items:
            type: string
        name:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        number:
          type: integer
        pictureNote:
          type: array
          items:
            type: string
          nullable: true
        qstFlows:
          type: array
          items:
            type: string
        qstPath:
          type: string
        questionId:
          type: integer
        revisingResult:
          type: integer
        typicalErrorAnswers:
          type: string
          nullable: true
        typicalRightAnswers:
          type: string
          nullable: true
    AnswerInfo:
      type: object
      properties:
        examAnswers:
          type: array
          items:
            type: string
        examComments:
          type: array
          items:
            type: string
        examMicroLessonComment:
          type: string
          nullable: true
        number:
          type: integer
        result:
          type: integer
        reviseMicroLessonComment:
          type: string
          nullable: true
        revisingAnswers:
          type: array
          items:
            type: string
        revisingComments:
          type: array
          items:
            type: string
        uuid:
          type: string
          nullable: true
    CustomMistakeQstItem:
      type: object
      properties:
        diff:
          type: integer
        extraAnswers:
          type: array
          items:
            type: string
        extraStems:
          type: array
          items:
            type: string
        stemShoot:
          type: string
        tagIdList:
          type: array
          items:
            type: integer
        title:
          type: string
        topicId:
          type: integer
    Message:
      type: object
      properties:
        applaud:
          type: object
        applaudTime:
          type: string
          format: date-time
        applauds:
          type: integer
        contact:
          type: string
          format: uri
        disabled:
          type: boolean
        id:
          type: integer
        isPrimary:
          type: boolean
        msgFlag:
          type: integer
        read:
          type: object
        readTime:
          type: string
          format: date-time
        sendTime:
          type: string
          format: date-time
        sessionId:
          type: integer
        snapshot:
          type: string
          format: uri
        userId:
          type: integer
        userName:
          type: string
    CollectSession:
      type: object
      properties:
        askUserName:
          type: string
        askUserPhoto:
          type: string
          format: uri
        class:
          type: string
        collectTime:
          type: string
          format: date-time
        courseId:
          type: integer
        id:
          type: integer
        snapshot:
          type: string
          format: uri
        summary:
          type: string
        topicName:
          type: string
  securitySchemes:
    token:
      type: http
      scheme: bearer
  responses: {}
  parameters:
    AppName:
      name: AppName
      in: header
      schema:
        type: string
        example: WebClient
        default: WebClient
      description: "\u8BF7\u6C42api\u7684\u5E94\u7528\u7684\u5305\u540D"
      required: true
    AppVersion:
      name: AppVersion
      in: header
      schema:
        type: integer
        default: 0
      description: "\u8BF7\u6C42api\u7684\u5E94\u7528\u7684\u7248\u672C"
      required: true
